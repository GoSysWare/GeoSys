
static void run_ULL2I(void *p) {
  fb_t *pb = (fb_t *)p;
  vam_t &enable = pb->ins[0].v;
  vam_t &status = pb->outs[0].v;
  if (enable->v().b() == false)
    return;
  // 强制转化溢出时会警告，但还是会执行
  if(pb->ins[1].v->v().ll() > INT_MAX ){
    status->mutable_v()->set_i(1);
  }
  pb->outs[1].v->mutable_v()->set_i((int)pb->ins[1].v->v().ull());
}
static fb_t fb_ULL2I = {{"Converter", "ULL2I", "", 0, 0, 0, 0, run_ULL2I},
                      {{"EN", PIN_NO_LINK, T_BOOL, "", nullptr},
                       {"IN", PIN_NO_LINK, T_UINT64, "", nullptr}},
                      {{"STATUS", PIN_NO_LINK, T_INT32, "", nullptr},
                       {"OUT", PIN_NO_LINK, T_INT32, "", nullptr}}};

