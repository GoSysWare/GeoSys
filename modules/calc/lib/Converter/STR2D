
static void run_STR2D(void *p) {
  fb_t *pb = (fb_t *)p;
  vam_t &enable = pb->ins[0].v;
  vam_t &status = pb->outs[0].v;
  if (enable->v().b() == false)
    return;

  try{
    pb->outs[1].v->mutable_v()->set_d(std::stod(pb->ins[1].v->v().str()));
  }catch(std::invalid_argument const & ex){
    status->mutable_v()->set_i(2);
  }catch(std::out_of_range const & ex){
    status->mutable_v()->set_i(1);
  }
}
static fb_t fb_STR2D = {{"Converter", "STR2D", "", 0, 0, 0, 0, FB_EXEC, run_STR2D},
                      {{"EN", PIN_NO_LOCK, T_BOOL, "", "",nullptr,0},
                       {"IN", PIN_NO_LOCK, T_STRING, "", "",nullptr,0}},
                      {{"STATUS", PIN_NO_LOCK, T_INT32, "", "",nullptr,0},
                       {"OUT", PIN_NO_LOCK, T_FLOAT64, "", "",nullptr,0}}};
