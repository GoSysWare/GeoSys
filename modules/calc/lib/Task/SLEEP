static void run_SLEEP(void *p) {
  fb_t *pb = (fb_t *)p;
  vam_t &enable = pb->ins[0].v;
  vam_t &status = pb->outs[0].v;
  if (enable->v().b() == false)
    return;
  vam_t in = pb->ins[1].v;
  vam_t timeout = pb->ins[2].v;
  vam_t &out = pb->outs[1].v;
  vam_t &in_time = pb->outs[2].v;
  vam_t &out_time = pb->outs[3].v;

  in_time->mutable_v()->set_tm(apollo::cyber::Time::Now().ToNanosecond());
  apollo::cyber::USleep(timeout->v().tm() * 1000);
  out_time->mutable_v()->set_tm(apollo::cyber::Time::Now().ToNanosecond());

  out->mutable_v()->set_b(in->v().b());
}

static fb_t fb_SLEEP = {{"TASK", "SLEEP", "", 0, 0, 0, 0, FB_EXEC, run_SLEEP},
                        {{"EN", PIN_NO_LOCK, T_BOOL, "", "",nullptr,0},
                         {"IN", PIN_NO_LOCK, T_BOOL, "", "",nullptr,0},
                         {"TIMEOUT", PIN_NO_LOCK, T_TIME, "", "",nullptr,0}},
                        {{"STATUS", PIN_NO_LOCK, T_INT32, "", "",nullptr,0},
                         {"OUT", PIN_NO_LOCK, T_BOOL, "", "",nullptr,0},
                         {"IN_TIME", PIN_NO_LOCK, T_TIME, "", "",nullptr,0},
                         {"OUT_TIME", PIN_NO_LOCK, T_TIME, "", "",nullptr,0}}};