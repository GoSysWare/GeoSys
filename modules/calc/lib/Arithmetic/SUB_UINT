
static void run_SUB_UINT(void *p) {

  fb_t *pb = (fb_t *)p;
  vam_t &enable = pb->ins[0].v;
  vam_t &status = pb->outs[0].v;
  if (enable->v().b() == false)
    return;
  vam_t &out = pb->outs[1].v;
  vam_t in1 = pb->ins[1].v;
  vam_t in2 = pb->ins[2].v;
  if(in1->v().ui() < in2->v().ui()){
    status->mutable_v()->set_i(-2);
  }else{
    out->mutable_v()->set_ui(in1->v().ui() - in2->v().ui());
  }
}

static fb_t fb_SUB_UINT = {
    {"Arithmetic","SUB_UINT","", 0,0,0,0, run_SUB_UINT},
    {{"EN", PIN_NO_LOCK,T_BOOL,"", "",nullptr,0},
     {"IN1", PIN_NO_LOCK,T_UINT32, "","",nullptr,0},
     {"IN2", PIN_NO_LOCK,T_UINT32,"", "",nullptr,0}},
    {{"STATUS", PIN_NO_LOCK,T_INT32,"", "",nullptr,0}, 
    {"OUT", PIN_NO_LOCK,T_INT32, "","",nullptr,0}}};
