static void run_BALANCE(void *p)
{	
	fb_t *pb = (fb_t *)p;

	if(pb->d[6].v.v.f < pb->d[7].v.v.f){
		pb->d[8].v.v.f = 0;
		pb->d[9].v.v.f = 0;
		pb->d[10].v.v.b = 1;
	}else{
		pb->d[10].v.v.b = 0;
		if((pb->d[7].v.v.f < pb->d[8].v.v.f < pb->d[6].v.v.f) && (pb->d[7].v.v.f < pb->d[9].v.v.f < pb->d[6].v.v.f)){
			if(pb->d[3].v.v.b && pb->d[5].v.v.b){
				pb->d[8].v.v.f = pb->d[2].v.v.f;
				pb->d[9].v.v.f = pb->d[4].v.v.f;
			}
			if((!pb->d[3].v.v.b) && (!pb->d[5].v.v.b)){
				pb->d[8].v.v.f = pb->d[0].v.v.f + pb->d[1].v.v.f;
				pb->d[9].v.v.f = pb->d[0].v.v.f - pb->d[1].v.v.f;
			}
			if(pb->d[3].v.v.b && (!pb->d[5].v.v.b)){
				pb->d[8].v.v.f = pb->d[2].v.v.f;
				pb->d[9].v.v.f = 2 * pb->d[0].v.v.f - pb->d[8].v.v.f;
			}
			if((!pb->d[3].v.v.b) && pb->d[5].v.v.b){
				pb->d[9].v.v.f = pb->d[4].v.v.f;
				pb->d[8].v.v.f = 2 * pb->d[0].v.v.f - pb->d[9].v.v.f;
			}
		}
		if(pb->d[8].v.v.f >= pb->d[6].v.v.f){
			pb->d[8].v.v.f = pb->d[6].v.v.f;	
		}
		if(pb->d[9].v.v.f >= pb->d[6].v.v.f){
			pb->d[9].v.v.f = pb->d[6].v.v.f;	
		}
		if(pb->d[8].v.v.f <= pb->d[7].v.v.f){
			pb->d[8].v.v.f = pb->d[7].v.v.f;	
		}
		if(pb->d[9].v.v.f <= pb->d[7].v.v.f){
			pb->d[9].v.v.f = pb->d[7].v.v.f;	
		}
	}
}

static fb_t fb_BALANCE = {
	"BALANCE", 8, 3, 0, 0, run_BALANCE, 
	{
		"IN", T_REAL, 0,	
		"DB", T_REAL, 0,	
		"TR1", T_REAL, 0,	
		"TS1", T_BOOL, 0,
		"TR2", T_REAL, 0,
		"TS2", T_BOOL, 0,
		"MAX", T_REAL, 0,
		"MIN", T_REAL, 0,
		"OUT1", T_REAL, 0,
		"OUT2", T_REAL, 0,
		"ERR", T_BOOL, 0,
	}
};
