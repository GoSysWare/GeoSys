static void run_LEADLAG(void *p)
{	
	fb_t *pb = (fb_t *)p;

	Time dt = clk_cycle();
	Real K1, K2, K3;

	if(pb->d[7].v.f < pb->d[8].v.f){
		pb->d[10].v.b = 1;
		pb->d[11].v.b = 1;
		return;
	}
	
	if(pb->d[5].v.b){
		pb->d[9].v.f = pb->d[6].v.f;
	}else if(!pb->d[4].v.b){
		K1 = pb->d[1].v.f * ((Real)dt + pb->d[2].v.f)/(pb->d[3].v.f + (Real)dt);
		K2 = pb->d[1].v.f * pb->d[2].v.f/(pb->d[3].v.f + (Real)dt);
		K3 = pb->d[3].v.f /(pb->d[3].v.f + (Real)dt);
		pb->d[9].v.f = K1 * pb->d[0].v.f - K2 * pb->d[12].v.f + K3 * pb->d[13].v.f;
	}

	if(pb->d[9].v.f > pb->d[7].v.f){
		pb->d[9].v.f = pb->d[7].v.f;
		pb->d[10].v.b = 1;
	}else{
		pb->d[10].v.b = 0;
	}
	
	if(pb->d[9].v.f < pb->d[8].v.f){
		pb->d[9].v.f = pb->d[8].v.f;
		pb->d[11].v.b = 1;
	}else{
		pb->d[11].v.b = 0;	
	}

	pb->d[12].v.f = pb->d[0].v.f;
	pb->d[13].v.f = pb->d[9].v.f;
}

static fb_t fb_LEADLAG = {
	"LEADLAG", 9, 3, 2, 0, run_LEADLAG, 
	{	
		"IN", T_REAL, 0,
		"GAIN", T_REAL, 0,
		"LEAD", T_REAL, 0,
		"LAG", T_REAL, 0,
		"HALT", T_BOOL, 0,	
		"MAN", T_BOOL, 0,
		"OUT_M", T_REAL, 0,
		"MAX", T_REAL, 0,
		"MIN", T_REAL, 0,
		"OUT", T_REAL, 0,
		"QMAX", T_BOOL, 0,
		"QMIN", T_BOOL, 0,
		"OLD_IN", T_REAL, 0,
		"OLD_OUT", T_REAL, 0,
	}
};
