

static void run_TWOSEL(void *p) {

  fb_t *pb = (fb_t *)p;
  vam_t &enable = pb->ins[0].v;
  vam_t &status = pb->outs[0].v;
  if (enable->v().b() == false)
    return;
  vam_t &out = pb->outs[1].v;
  vam_t &out_err = pb->outs[2].v;
  vam_t in1 = pb->ins[1].v;
  vam_t in2 = pb->ins[2].v;
  vam_t in1_err = pb->ins[3].v;
  vam_t in2_err = pb->ins[4].v;
  vam_t mode = pb->ins[5].v;
  vam_t dl = pb->ins[6].v;

  if (in1_err->v().b() && in2_err->v().b()) {
    out_err->mutable_v()->set_b(true);
    return;
  } else if (in1_err->v().b()) {
    out_err->mutable_v()->set_b(false);
    out->mutable_v()->set_f(in2->v().f());
  } else if (in2_err->v().b()) {
    out_err->mutable_v()->set_b(false);
    out->mutable_v()->set_f(in1->v().f());
  } else {
    if (dl->v().f() < 0 || fabs(in1->v().f() - in2->v().f()) > dl->v().f()) {
      out_err->mutable_v()->set_b(true);
      return;
    } else {
      if (mode->v().i() > 4 || mode->v().i() < 0) {
        out_err->mutable_v()->set_b(true);
        return;

      } else if (mode->v().i() == 0) { //  平均值
        out_err->mutable_v()->set_b(false);
        out->mutable_v()->set_f((in2->v().f() + in2->v().f()) / 2);
      } else if (mode->v().i() == 1) { //  最小值
        out_err->mutable_v()->set_b(false);
        out->mutable_v()->set_f(std::min(in1->v().f(), in2->v().f()));
      } else if (mode->v().i() == 2) { //  最大值
        out_err->mutable_v()->set_b(false);
        out->mutable_v()->set_f(std::max(in1->v().f(), in2->v().f()));
      } else if (mode->v().i() == 3) { //  取in1
        out_err->mutable_v()->set_b(false);
        out->mutable_v()->set_f(in1->v().f());
      } else if (mode->v().i() == 4) { //  取in2
        out_err->mutable_v()->set_b(false);
        out->mutable_v()->set_f(in2->v().f());
      }
    }
  }
}

static fb_t fb_TWOSEL = {{"Logic", "TWOSEL", "", 0, 0, 0, 0, run_TWOSEL},
                         {{"EN", PIN_NO_LINK, T_BOOL, "", nullptr},
                          {"IN1", PIN_NO_LINK, T_FLOAT32, "", nullptr},
                          {"IN2", PIN_NO_LINK, T_FLOAT32, "", nullptr},
                          {"IN1_ERR", PIN_NO_LINK, T_BOOL, "", nullptr},
                          {"IN2_ERR", PIN_NO_LINK, T_BOOL, "", nullptr},
                          {"MODE", PIN_NO_LINK, T_INT32, "", nullptr},
                          {"DL", PIN_NO_LINK, T_FLOAT32, "", nullptr}},
                         {{"STATUS", PIN_NO_LINK, T_INT32, "", nullptr},
                          {"OUT", PIN_NO_LINK, T_FLOAT32, "", nullptr},
                          {"ERR", PIN_NO_LINK, T_BOOL, "", nullptr}}};