static void run_THRSEL(void *p)
{	
	fb_t *pb = (fb_t *)p;

	Real IN1 = pb->d[0].v.f;
	Real IN2 = pb->d[1].v.f;
	Real IN3 = pb->d[2].v.f;
	Bool IN1_ERR = pb->d[3].v.b;
	Bool IN2_ERR = pb->d[4].v.b;
	Bool IN3_ERR = pb->d[5].v.b;
	Int i = pb->d[6].v.i;
	Real DB = pb->d[7].v.f;
	
	Real e12,e23,e13;

	e12 = (Real)fabs(IN1 - IN2);
	e23 = (Real)fabs(IN2 - IN3);
	e13 = (Real)fabs(IN1 - IN3); 

	if(IN1_ERR && IN2_ERR && IN3_ERR){
		pb->d[9].v.b = 1;
		return;
	}
	
	if(IN1_ERR && IN2_ERR){
		pb->d[9].v.b = 0;
		pb->d[8].v.f = IN3;
	}else if(IN2_ERR && IN3_ERR){
		pb->d[9].v.b = 0;
		pb->d[8].v.f = IN1;
	}else if(IN1_ERR && IN3_ERR){
		pb->d[9].v.b = 0;
		pb->d[8].v.f = IN2;
	}

	if(!IN1_ERR && !IN2_ERR && IN3_ERR){
		if((DB < 0) || (e12 > DB)){
			pb->d[9].v.b = 1;
		}else{
			if((i > 6) || (i < 0) || (i == 3)){
				pb->d[9].v.b = 1;
			}else if(i == 0){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = (IN1 + IN2) / 2;
			}else if(i == 1){
				pb->d[9].v.b = 0;
				if(IN1 >= IN2){
					pb->d[8].v.f = IN2;
				}else{
					pb->d[8].v.f = IN1;
				}
			}else if(i == 2){
				pb->d[9].v.b = 0;
				if(IN1 >= IN2){
					pb->d[8].v.f = IN1;
				}else{
					pb->d[8].v.f = IN2;
				}
			}else if(i == 4){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = IN1;
			}else if(i == 5){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = IN2;
			}
		}
	}				

	if(IN1_ERR && !IN2_ERR && !IN3_ERR){
		if((DB < 0) || (e23 > DB)){
			pb->d[9].v.b = 1;
		}else{
			if((i > 6) || (i < 0) || (i == 3)){
				pb->d[9].v.b = 1;
			}else if(i == 0){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = (IN2 + IN3) / 2;
			}else if(i == 1){
				pb->d[9].v.b = 0;
				if(IN2 >= IN3){
					pb->d[8].v.f = IN3;
				}else{
					pb->d[8].v.f = IN2;
				}
			}else if(i == 2){
				pb->d[9].v.b = 0;
				if(IN2 >= IN3){
					pb->d[8].v.f = IN2;
				}else{
					pb->d[8].v.f = IN3;
				}
			}else if(i == 5){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = IN2;
			}else if(i == 6){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = IN3;
			}
		}
	}

	if(!IN1_ERR && IN2_ERR && !IN3_ERR){
		if((DB < 0) || (e13 > DB)){
			pb->d[9].v.b = 1;
		}else{
			if((i > 6) || (i < 0) || (i == 3)){
				pb->d[9].v.b = 1;
			}else if(i == 0){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = (IN1 + IN3) / 2;
			}else if(i == 1){
				pb->d[9].v.b = 0;
				if(IN1 >= IN3){
					pb->d[8].v.f = IN3;
				}else{
					pb->d[8].v.f = IN1;
				}
			}else if(i == 2){
				pb->d[9].v.b = 0;
				if(IN1 >= IN3){
					pb->d[8].v.f = IN1;
				}else{
					pb->d[8].v.f = IN3;
				}
			}else if(i == 4){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = IN1;
			}else if(i == 6){
				pb->d[9].v.b = 0;
				pb->d[8].v.f = IN3;
			}
		}
	}

	if(!IN1_ERR && !IN2_ERR && !IN3_ERR){
		if((e12 > DB) && (e23 > DB) && (e13 > DB)){
			pb->d[9].v.b = 1;
			return;
		}else if(!(e12 > DB) && (e23 > DB) && (e13 > DB)){
			pb->d[9].v.b = 0;
			pb->d[8].v.f = (IN1 + IN2)/2;
		}else if((e12 > DB) && !(e23 > DB) && (e13 > DB)){
			pb->d[9].v.b = 0;
			pb->d[8].v.f = (IN2 + IN3)/2;
		}else if((e12 > DB) && (e23 > DB) && !(e13 > DB)){
			pb->d[9].v.b = 0;
			pb->d[8].v.f = (IN1 + IN3)/2;
		}else if(!(e12 > DB) && !(e23 > DB) && (e13 > DB)){
			pb->d[9].v.b = 0;
			pb->d[8].v.f = IN2;
		}else if((e12 > DB) && !(e23 > DB) && !(e13 > DB)){
			pb->d[9].v.b = 0;
			pb->d[8].v.f = IN3;
		}else if(!(e12 > DB) && (e23 > DB) && !(e13 > DB)){
			pb->d[9].v.b = 0;
			pb->d[8].v.f = IN1;
		}else if(!(e12 > DB) && !(e23 > DB) && !(e13 > DB)){
			pb->d[9].v.b = 0;
			if(i == 0){
				pb->d[8].v.f = (IN1 + IN2 + IN3)/3;
			}else if(i == 1){
				if((IN1 <= IN2) && (IN1 <= IN3)){
					pb->d[8].v.f = IN1;
				}
				if((IN2 <= IN1) && (IN2 <= IN3)){
					pb->d[8].v.f = IN2;
				}
				if((IN3 <= IN1) && (IN3 <= IN2)){
					pb->d[8].v.f = IN3;
				}
			}else if(i == 2){
				if((IN1 >= IN2) && (IN1 >= IN3)){
					pb->d[8].v.f = IN1;
				}
				if((IN2 >= IN1) && (IN2 >= IN3)){
					pb->d[8].v.f = IN2;
				}
				if((IN3 >= IN1) && (IN3 >= IN2)){
					pb->d[8].v.f = IN3;
				}
			}else if(i == 3){
				if((IN1 >= IN2) && (IN1 <= IN3)){
					pb->d[8].v.f = IN1;
				}
				if((IN2 >= IN1) && (IN2 <= IN3)){
					pb->d[8].v.f = IN2;
				}
				if((IN3 >= IN1) && (IN3 <= IN2)){
					pb->d[8].v.f = IN3;
				}
			}else if(i == 4){
				pb->d[8].v.f = IN1;
			}else if(i == 5){
				pb->d[8].v.f = IN2;
			}else if(i == 6){
				pb->d[8].v.f = IN3;
			}
		}
	}
}

static fb_t fb_THRSEL = {
	"THRSEL", 8, 2, 0, 0, run_THRSEL, 
	{
		"IN1", T_REAL, 0,
		"IN2", T_REAL, 0,
		"IN3", T_REAL, 0,
		"IN1_ERR", T_BOOL, 0,
		"IN2_ERR", T_BOOL, 0,
		"IN3_ERR", T_BOOL, 0,
		"MODE", T_INT, 0,
		"DB", T_REAL, 0,
		"OUT", T_REAL, 0,
		"ERR", T_BOOL, 0,
	}
};
