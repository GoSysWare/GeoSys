static void run_D_AS_VAL(void *p)
{	
	fb_t *pb = p;

	Time dt = clk_cycle();

	Bool AM = pb->d[0].v.b;
	Bool KO_S = pb->d[1].v.b;
	Bool KO_L = pb->d[2].v.b;
	Bool AO = pb->d[3].v.b;
	Bool PO = pb->d[4].v.b;
	Bool DPO = pb->d[5].v.b;
	Bool KO_FB = pb->d[6].v.b;
	Bool LO = pb->d[7].v.b;
	Bool FO = pb->d[8].v.b;
	Bool OPN = pb->d[9].v.b;
	Real AI = pb->d[10].v.f;
	Real MaxR = pb->d[11].v.f;
	Real MinR = pb->d[12].v.f;
	Bool CLS = pb->d[13].v.b;
	Bool MPP = pb->d[14].v.b;
	Bool FZ = pb->d[15].v.b;
	Bool LC = pb->d[16].v.b;
	Bool KC_FB = pb->d[17].v.b;
	Bool PC = pb->d[18].v.b;
	Bool AC = pb->d[19].v.b;
	Bool KC_L = pb->d[20].v.b;
	Bool KC_S = pb->d[21].v.b;
	Bool PS = pb->d[22].v.b;
	Time TD = pb->d[23].v.tm;


	pb->d[30].v.b = (((AM && AO && !AC) || ((KO_S || KO_L) && !KO_FB && !(KC_L || KC_S))|| PO) && FO && !PS && !LO && !PC);
	pb->d[31].v.b = (((AM && AC && !AO) || ((KC_S || KC_L) && !KC_FB && !(KO_L || KO_S))|| PC) && FZ && !PS && !LC && !DPO);
	pb->d[24].v.b = (((AM && AO && !AC) || ((KO_S || KO_L) && !KO_FB && !(KC_L || KC_S))|| PO)&& !pb->d[30].v.b);
	pb->d[26].v.b = (((AM && AC && !AO) || ((KC_S || KC_L) && !KC_FB && !(KO_L || KO_S))|| PC)&& !pb->d[31].v.b);
	pb->d[36].v.b = (KO_S || PC || (AI > MaxR) || MPP || pb->d[28].v.b || pb->d[31].v.b || OPN);
	pb->d[37].v.b = (pb->d[30].v.b || pb->d[28].v.b || (MinR > AI) || KC_S || PO || MPP || CLS);
	pb->d[38].v.b = ((AI > MaxR) || (MinR > AI));
	pb->d[39].v.b = ((AI > MaxR) || OPN || MPP);
	pb->d[32].v.b = (pb->d[30].v.b && !pb->d[34].v.b);
	pb->d[34].v.b = (pb->d[31].v.b && !pb->d[32].v.b);
		

	if(pb->d[32].v.b){
		pb->d[33].v.b = 1;
	}else if(pb->d[36].v.b){
		pb->d[33].v.b = 0;
	}
	if(DPO) {
		pb->d[40].v.b = 1;
	}else if(pb->d[39].v.b){
		pb->d[40].v.b = 0;
	}
	
	pb->d[25].v.b = (pb->d[35].v.b || pb->d[40].v.b || (pb->d[48].v.b && pb->d[30].v.b));
	

	if(pb->d[34].v.b){
		pb->d[35].v.b = 1;
	}else if(pb->d[37].v.b){
		pb->d[35].v.b = 0;
	}
	
	pb->d[27].v.b = (pb->d[35].v.b || (pb->d[50].v.b && pb->d[31].v.b));
	

	pb->d[41].v.b = MPP;
	if(pb->d[41].v.b){
		pb->d[42].v.b = 1;
	}else if(pb->d[38].v.b){
		pb->d[42].v.b = 0;
	}


	pb->d[43].v.b = (pb->d[33].v.b || pb->d[35].v.b || ((pb->d[33].v.b && !pb->d[42].v.b) || (pb->d[35].v.b && !pb->d[42].v.b)));
	if(pb->d[43].v.b){
		if(!pb->d[45].v.b){
			pb->d[29].v.tm = 0;
			pb->d[52].v.tm = 0;
		}else if(pb->d[52].v.tm >= TD){
			pb->d[44].v.b = 1;
			pb->d[29].v.tm = TD;
			pb->d[52].v.tm = TD;
		}else{
			pb->d[44].v.b = 0;
			pb->d[52].v.tm += dt;
			pb->d[29].v.tm = pb->d[52].v.tm; 
		}
	}else{
		pb->d[44].v.b = 0;
		pb->d[29].v.tm = 0;
	}
	pb->d[45].v.b = pb->d[43].v.b;


	if(pb->d[46].v.b){
		if(!pb->d[49].v.b){
			pb->d[53].v.tm = 0;
		}else if(pb->d[53].v.tm >= 0.1){
			pb->d[48].v.b = 1;
			pb->d[53].v.tm = 0.1;
		}else{
			pb->d[48].v.b = 0;
			pb->d[53].v.tm += dt;
		}
	}else{
		pb->d[48].v.b = 0;
	}
	pb->d[49].v.b = KO_S;


	if(pb->d[47].v.b){
		if(!pb->d[51].v.b){
			pb->d[54].v.tm = 0;
		}else if(pb->d[54].v.tm >= 0.1){
			pb->d[50].v.b = 1;
			pb->d[54].v.tm = 0.1;
		}else{
			pb->d[50].v.b = 0;
			pb->d[53].v.tm += dt;
		}
	}else{
		pb->d[50].v.b = 0;
	}
	pb->d[51].v.b = KC_S;


	if(pb->d[44].v.b){
		pb->d[28].v.b = 1;
	}else if(pb->d[14].v.b){
		pb->d[28].v.b = 0;
	}
}

static fb_t fb_D_AS_VAL = {
	"D_AS_VAL", 24, 6, 25, 0, run_D_AS_VAL, 
	{
		"AM", T_BOOL, 0,	
		"KO_S", T_BOOL, 0,	
		"KO_L", T_BOOL, 0,
		"AO", T_BOOL, 0,
		"PO", T_BOOL, 0,
		"DPO", T_BOOL, 0,
		"KO_FB", T_BOOL, 0,
		"LO", T_BOOL, 0,
		"FO", T_BOOL, 0,
		"OPN", T_BOOL, 0,
		"AI", T_REAL, 0,
		"MaxR", T_REAL, 0,
		"MinR", T_REAL, 0,
		"CLS", T_BOOL, 0,
		"MPP", T_BOOL, 0,
		"FZ", T_BOOL, 0,
		"LC", T_BOOL, 0,
		"KC_FB", T_BOOL, 0,
		"PC", T_BOOL, 0,
		"AC", T_BOOL, 0,
		"KC_L", T_BOOL, 0,
		"KC_S", T_BOOL, 0,
		"PS", T_BOOL, 0,
		"TD", T_TIME, 0,

		"ONENO", T_BOOL, 0,
		"ONCMD", T_BOOL, 0,
		"OFFENO", T_BOOL, 0,
		"OFFCMD", T_BOOL, 0,
		"TIMOUT", T_BOOL, 0,	
		"ETD", T_TIME, 0,

		"OP", T_BOOL, 0,
		"CL", T_BOOL, 0,
		"OpenS", T_BOOL, 0,
		"OpenQ", T_BOOL, 0,
		"CloseS", T_BOOL, 0,
		"CloseQ", T_BOOL, 0,
		"R1", T_BOOL, 0,
		"R2", T_BOOL, 0,
		"R3", T_BOOL, 0,
		"R4", T_BOOL, 0,
		"DPOQ", T_BOOL, 0,
		"MPPS", T_BOOL, 0,
		"MPPQ", T_BOOL, 0,
		"TDS", T_BOOL, 0,
		"TDQ", T_BOOL, 0,
		"old_TD", T_BOOL, 0,
		"KOSS", T_BOOL, 0,
		"KCSS", T_BOOL, 0,
		"KO_STPQ", T_BOOL, 0,
		"old_KOSP", T_BOOL, 0,
		"KC_STPQ", T_BOOL, 0,
		"old_KCSP", T_BOOL, 0,
		"td", T_TIME, 0,
		"to", T_TIME, 0,
		"tc", T_TIME, 0,
	}
};
