static void run_RMP(void *p)
{	
	fb_t *pb = p;

	Time dt = clk_cycle();
	Real dy;

	if(pb->d[4].v.b){
		pb->d[5].v.f = pb->d[0].v.f;
		pb->d[6].v.b = 0;
	}else if(pb->d[0].v.f <= pb->d[1].v.f){
		if(!pb->d[3].v.b){
			dy = (Real)dt * pb->d[2].v.f;
			pb->d[5].v.f += dy;
		}
		if(pb->d[5].v.f >= pb->d[1].v.f){
			pb->d[5].v.f = pb->d[1].v.f;
			pb->d[6].v.b = 1;
		}else{
			pb->d[6].v.b = 0;
		}
	}else if(pb->d[0].v.f > pb->d[1].v.f){
		if(!pb->d[3].v.b){
			dy = (Real)dt * pb->d[2].v.f;
			pb->d[5].v.f -= dy;
		}
		if(pb->d[5].v.f <= pb->d[1].v.f){
			pb->d[5].v.f = pb->d[1].v.f;
			pb->d[6].v.b = 1;
		}else{
			pb->d[6].v.b = 0;
		}
	}
}

static fb_t fb_RMP = {
	"RMP", 5, 2, 0, 0, run_RMP, 
	{
		"BASE", T_REAL, 0,
		"END", T_REAL, 0,
		"RATE", T_REAL, 0,
		"HOLD", T_BOOL, 0,
		"RST", T_BOOL, 1,
		"OUT", T_REAL, 0,
		"D", T_BOOL, 0,
	}	
};
